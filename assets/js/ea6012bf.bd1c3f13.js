"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[190],{5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>g});var a=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),l=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,g=u["".concat(d,".").concat(m)]||u[m]||p[m]||s;return r?a.createElement(g,i(i({ref:t},c),{},{components:r})):a.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var l=2;l<s;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4984:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=r(8168),n=r(8587),s=(r(6540),r(5680)),i=["components"],o={id:"messaging-model",title:"Messaging Model",sidebar_label:"Messaging Model"},d=void 0,l={unversionedId:"messaging-model",id:"messaging-model",title:"Messaging Model",description:"Apache ActiveMQ Artemis messaging model is build on top of three main concepts: addresses, queues and routing types.",source:"@site/../docs/messaging-model.md",sourceDirName:".",slug:"/messaging-model",permalink:"/dotnet-activemq-artemis-client/docs/messaging-model",draft:!1,editUrl:"https://github.com/Havret/dotnet-activemq-artemis-client/edit/master/website/../docs/messaging-model.md",tags:[],version:"current",frontMatter:{id:"messaging-model",title:"Messaging Model",sidebar_label:"Messaging Model"},sidebar:"someSidebar",previous:{title:"Transactions",permalink:"/dotnet-activemq-artemis-client/docs/transactions"},next:{title:"Request Reply",permalink:"/dotnet-activemq-artemis-client/docs/request-reply"}},c={},u=[{value:"Address",id:"address",level:2},{value:"Routing Types",id:"routing-types",level:2},{value:"Further Reading",id:"further-reading",level:2},{value:"Footnotes:",id:"footnotes",level:3}],p={toc:u},m="wrapper";function g(e){var t=e.components,r=(0,n.A)(e,i);return(0,s.yg)(m,(0,a.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"Apache ActiveMQ Artemis messaging model is build on top of three main concepts: ",(0,s.yg)("em",{parentName:"p"},"addresses"),", ",(0,s.yg)("em",{parentName:"p"},"queues")," and ",(0,s.yg)("em",{parentName:"p"},"routing types"),"."),(0,s.yg)("h2",{id:"address"},"Address"),(0,s.yg)("p",null,"The general idea behind the messaging model of Apache ActiveMQ Artemis is that producers never send messages directly to queues. Actually, a producer is unaware whether a message will be delivered to any queue at all. Instead, the producer can only send messages to an address. The address represents a message endpoint. It receives messages from producers and pushes them to queues. The address knows exactly what to do with the message it receives. Should it be appended to a single or to many queues? Or maybe should it be discarded. The rules for that are defined by the ",(0,s.yg)("em",{parentName:"p"},"routing type"),"."),(0,s.yg)("h2",{id:"routing-types"},"Routing Types"),(0,s.yg)("p",null,"There are two routing types available in Apache ActiveMQ Artemis: ",(0,s.yg)("em",{parentName:"p"},"Anycast")," and ",(0,s.yg)("em",{parentName:"p"},"Multicast"),". The address can be created with either or both routing types."),(0,s.yg)("p",null,"When the address was created with ",(0,s.yg)("em",{parentName:"p"},"Anycast")," routing type all messages send to this address will be evenly distributed",(0,s.yg)("sup",{parentName:"p",id:"fnref-anycast-message-distribution"},(0,s.yg)("a",{parentName:"sup",href:"#fn-anycast-message-distribution",className:"footnote-ref"},"anycast-message-distribution"))," among all the queues attached to this address. With ",(0,s.yg)("em",{parentName:"p"},"Multicast")," routing type every queue bound to the address receives its very own copy of a message. Had the message been pushed to the queue, it can be picked up by one of the consumers attached to this particular queue."),(0,s.yg)("h2",{id:"further-reading"},"Further Reading"),(0,s.yg)("p",null,"The Apache ActiveMQ Artemis address model is described in detail (with examples using ArtemisNetClient) in ",(0,s.yg)("a",{parentName:"p",href:"https://havret.io/activemq-artemis-address-model"},"this")," article."),(0,s.yg)("h3",{id:"footnotes"},"Footnotes:"),(0,s.yg)("div",{className:"footnotes"},(0,s.yg)("hr",{parentName:"div"}),(0,s.yg)("ol",{parentName:"div"},(0,s.yg)("li",{parentName:"ol",id:"fn-anycast-message-distribution"},"Messages will be distributed using Round-robin distribution algorithm.",(0,s.yg)("a",{parentName:"li",href:"#fnref-anycast-message-distribution",className:"footnote-backref"},"\u21a9")))))}g.isMDXComponent=!0}}]);